
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module ECEN3002_Lab1(

	//////////// CLOCK //////////
	input 		          		CLOCK2_50,
	input 		          		CLOCK3_50,
	input 		          		CLOCK4_50,
	input 		          		CLOCK_50,

	//////////// KEY //////////
	input 		     [3:0]		KEY,

	//////////// SW //////////
	input 		     [9:0]		SW,

	//////////// LED //////////
	output	       [9:0]		LEDR,

	//////////// Seg7 //////////
	output		     [6:0]		HEX0,
	output		     [6:0]		HEX1,
	output		     [6:0]		HEX2,
	output		     [6:0]		HEX3,
	output		     [6:0]		HEX4,
	output		     [6:0]		HEX5
);


//=======================================================
//  REG/WIRE declarations
//=======================================================
reg [31:0] divide_by;
reg [9:0] ledValue;
wire clock;
assign LEDR[8:0] = ledValue[8:0];
assign LEDR[9] = 1;



//=======================================================
//  Structural coding
//=======================================================

ECEN3002_Lab1_ClockDivider CD0 (.clock_in(CLOCK_50), .divide_by(divide_by), .reset_n(KEY[0]), .clock_out(clock));


initial begin
    ledValue = 0;
    divide_by = 5;
end

// Flip the LEDR[0] to match the clock
always @ (posedge clock or negedge KEY[0])
    begin
       if (~KEY[0])
            ledValue <= 0;
        else
            ledValue <= ledValue + 1;
    end


endmodule
